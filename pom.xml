<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.example</groupId>
    <artifactId>MultipleModules</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <module>SpeedDate</module>
        <module>BankApp</module>
        <module>Blok1Java</module>
        <module>Blok2Database</module>
        <module>CaseOne</module>
    </modules>

    <!-- Hieronder kun je ook variabelen declareren welke ook voor onderliggende poms beschikbaar zijn -->
    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.release>11</maven.compiler.release>

        <!-- Warning: Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- VARIABLES -->
        <pitest.maven.version>1.4.2</pitest.maven.version>
        <pitest.junit5.plugin.version>0.12</pitest.junit5.plugin.version>
        <junit.jupiter.engine.version>5.7.0</junit.jupiter.engine.version>
        <h2.version>1.4.200</h2.version>
        <log4j.slf4j.impl.version>2.11.2</log4j.slf4j.impl.version>
        <mockito.core.version>3.5.15</mockito.core.version>
        <mockito.junit.jupiter.version>3.5.15</mockito.junit.jupiter.version>
        <maven.surefire.plugin.version>2.22.2</maven.surefire.plugin.version>
        <pitest.maven.version>1.5.2</pitest.maven.version>
        <pitest.junit5.plugin.version>0.9</pitest.junit5.plugin.version>
        <mysql.connector.java.version>8.0.16</mysql.connector.java.version>
        <hibernate.core.version>5.4.23.Final</hibernate.core.version>
        <lomobck.version>1.18.12</lomobck.version>
    </properties>

    <!-- Worden hier nog niet binnengehaald. <groupId> en <artifactId> bij <dependencies> noemen in onderliggende pom-->
    <dependencyManagement>
        <dependencies>
            <!-- TESTING -->
            <!-- Voor de JUnit5 test, 1 dependency, 3 benodigde dependencies zitten hierin -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.engine.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Mockito, je mag ipv deze ook mockito-all pakken maar deze heeft voldoende functionaliteiten -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.core.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Samenwerking tussen mockito en JUnit5 -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.junit.jupiter.version}</version> <!-- Dezelfde versie als mockito.core zorgde ervoor dat het werkt -->
                <scope>test</scope>
            </dependency>

            <!-- In memory database for testing -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>



            <!-- LOGGING -->
            <!--+ een log4j2.xml bestand onder main-resources plaatsen voor configuratie
            2 dependencies nodig, maar org.slf4j slf4j-api zit al in deze dependency
            Dit is een implementatie van de api. Je kunt dus ook een andere kiezen-->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.slf4j.impl.version}</version>
            </dependency>



            <!-- DATABASE JPA -->
            <!-- + persistence.xml file in resources-META-INF -->
            <!-- javax.persistance-api hebben we ook nodig maar zit al in hibernate-core -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.java.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.core.version}</version>
            </dependency>

            <!-- Lombock -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lomobck.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Deze dependencies gelden voor het hele project -->
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Surefire version updaten -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                </plugin>

                <!-- Pitest -->
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${pitest.maven.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>mutationCoverage</goal> <!-- Tijdens de testphase (zelf aangegeven) wordt van de -->
                            </goals>                          <!-- pitest plugin deze goal automatisch aangeroepen -->
                            <phase>test</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <targetClasses>
                            <param>speedDate*</param> <!-- Zelf de map aangeven -->
                        </targetClasses>
                        <targetTests>
                            <param>speedDate*</param> <!-- Zelf de map aangeven -->
                        </targetTests>
                    </configuration>
                    <!-- Deze dependency moet hier staan. Voor de samenwerking met JUnit5 -->
                    <dependencies>
                        <dependency>
                            <groupId>org.pitest</groupId>
                            <artifactId>pitest-junit5-plugin</artifactId>
                            <version>${pitest.junit5.plugin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>